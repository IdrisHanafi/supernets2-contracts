#!/bin/bash

## To use this hook execute in the project root:
## git config --local core.hooksPath .githooks/
if npm run lint; then
    npx hardhat compile --force
    npm run docgen
    git add docs
    cp artifacts/contracts/Supernets2Bridge.sol/Supernets2Bridge.json compiled-contracts/
    cp artifacts/contracts/Supernets2GlobalExitRoot.sol/Supernets2GlobalExitRoot.json compiled-contracts/
    cp artifacts/contracts/Supernets2GlobalExitRootL2.sol/Supernets2GlobalExitRootL2.json compiled-contracts/
    cp artifacts/contracts/lib/TokenWrapped.sol/TokenWrapped.json compiled-contracts/
    cp artifacts/contracts/mocks/Supernets2BridgeMock.sol/Supernets2BridgeMock.json compiled-contracts/
    cp artifacts/contracts/mocks/ERC20PermitMock.sol/ERC20PermitMock.json compiled-contracts/
    cp artifacts/contracts/mocks/Supernets2GlobalExitRootL2Mock.sol/Supernets2GlobalExitRootL2Mock.json compiled-contracts/
    cp artifacts/contracts/mocks/Supernets2GlobalExitRootMock.sol/Supernets2GlobalExitRootMock.json compiled-contracts/
    cp artifacts/contracts/mocks/Supernets2Mock.sol/Supernets2Mock.json compiled-contracts/
    cp artifacts/contracts/mocks/VerifierRollupHelperMock.sol/VerifierRollupHelperMock.json compiled-contracts/
    cp artifacts/contracts/Supernets2.sol/Supernets2.json compiled-contracts/
    cp artifacts/contracts/verifiers/FflonkVerifier.sol/FflonkVerifier.json compiled-contracts/
    cp artifacts/@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol/ProxyAdmin.json compiled-contracts/
    cp artifacts/@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol/TransparentUpgradeableProxy.json compiled-contracts/
    cp artifacts/contracts/deployment/Supernets2Deployer.sol/Supernets2Deployer.json compiled-contracts/
    cp artifacts/contracts/Supernets2Timelock.sol/Supernets2Timelock.json compiled-contracts/
    git add compiled-contracts
    exit 0
else
    exit 1
fi

